条件に従い、Excelのブックからブックへデータベースを転記するVBAを書いてください。
# 条件
- 'グラフ作成用ファイル.xlsm'ブックの中の'LOG_Helmet','LOG_BaseBall','LOG_Bicycle','LOG_FallArrest'のシートの内容を転記する。
- 転記するセル範囲は4つのシートともにB2から列の最終列まで、行はデータの最後まで
- データを転記するブックは'試験結果_データベース.xlsm'ブック
- 'LOG_Helmet'は'HeLmetTestData','LOG_BaseBall'は'BaseBallTestData','LOG_Bicycle'は'biCycleHelmetTestData','LOG_FallArrest'は'FallArrestTestData'というシート名にする。
- それ以外のシートは無視する。
- 処理は各シートごとに1行ずつ行う。
- 転記した'LOG_Helmet'などの範囲は削除する。
- テスト用に削除するプログラムはコメントアウトしてください。
- コメントを日本語で書いてください。


試験結果を記録するデータベース用のIDを考えてください。
# 条件
- 試験は4種類ありそれぞれ、保護帽試験、野球帽試験、自転車帽体試験、墜落制止用器具試験とします。
- とりあえず5パターンずつ提案してください。
- HRT-0001, HRT-0002, HRT-0003, HRT-0004, HRT-0005
- BBT-0001, BBT-0002, BBT-0003, BBT-0004, BBT-0005
- CHT-0001, CHT-0002, CHT-0003, CHT-0004, CHT-0005
- FAT-0001, FAT-0002, FAT-0003, FAT-0004, FAT-0005


    lastRow = ws.cells(ws.rows.Count, "B").End(xlUp).Row
    Dim cellRng As Range
    For Each cellRng In ws.Range("F2:P" & lastRow)
        If IsEmpty(cellRng) Then
            cellRng.Value = "-"
        End If
    Next cellRng
上記のコードに以下の条件を加えてください。
# 条件
- "HRT", "BBT", "CHT", "FAT"の文字列が入っている以外のB列の値を消す。


下記のコードに以下の条件を加えてください。
# 条件
- "試験結果_データベース.xlsm"が立ち上がってなくても動くようにする。

Sub DataMigration_GraphToTestDB_FromGraphbook()

    ' 転記元のブックと転記先のブックを定義
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Set sourceWorkbook = Workbooks("グラフ作成用ファイル.xlsm")
    Set targetWorkbook = Workbooks("試験結果_データベース.xlsm")

    ' 画面更新をオフにします
    Application.ScreenUpdating = False

    ' 転記元と転記先のシート名を定義
    Dim sourceSheets As Variant
    Dim targetSheets As Variant
    sourceSheets = Array("LOG_Helmet", "LOG_BaseBall", "LOG_Bicycle", "LOG_FallArrest")
    targetSheets = Array("HeLmetTestData", "BaseBallTestData", "biCycleHelmetTestData", "FallArrestTestData")

    Dim i As Integer
    For i = LBound(sourceSheets) To UBound(sourceSheets)
        ' 転記元のシートと転記先のシートを定義
        Dim sourceSheet As Worksheet
        Dim targetSheet As Worksheet
        Set sourceSheet = sourceWorkbook.Worksheets(sourceSheets(i))
        Set targetSheet = targetWorkbook.Worksheets(targetSheets(i))

        ' 転記元のシートの最終行と最終列を取得
        Dim lastRow As Long
        Dim lastColumn As Long
        lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, "B").End(xlUp).Row
        lastColumn = sourceSheet.Cells(2, sourceSheet.Columns.Count).End(xlToLeft).Column

        ' 2行目以降に転記するデータがある場合のみコピーを行います
        If lastRow >= 2 Then
            ' 転記先のシートの最終行を取得
            Dim targetLastRow As Long
            targetLastRow = targetSheet.Cells(targetSheet.Rows.Count, "B").End(xlUp).Row + 1

            ' 転記元から転記先へデータをコピー
            sourceSheet.Range(sourceSheet.Cells(2, "B"), sourceSheet.Cells(lastRow, lastColumn)).Copy _
                Destination:=targetSheet.Cells(targetLastRow, "B")

            ' 転記した範囲を削除（データのみを削除）
            sourceSheet.Range(sourceSheet.Cells(2, "B"), sourceSheet.Cells(lastRow, lastColumn)).ClearContents
        Else
            ' 2行目以降に転記するデータがない場合はエラーメッセージを表示します
            MsgBox "Sheet: " & sourceSheets(i) & " has no data to transfer from the 2nd row onwards."
        End If
    Next i

    '画面更新をオンにします
    Application.ScreenUpdating = True

    'ブックを保存し、クローズします
    sourceWorkbook.Close SaveChanges:=True

End Sub

以下のコードを参考に条件に従ってVBAコードを修正してください。
# 条件
- 各シートのグラフをすべて削除する。
- 試験結果_データベース.xlsmのB列の最終行の値を見て、HBT-00004のようになっている場合は、HBT-00005のようになるようにする。
- "LOG_Helmet", "LOG_BaseBall", "LOG_Bicycle", "LOG_FallArrest"に対応するのは"HBT-00000", "BBT-00000", "CHT-00000", "FAT-00000"

以下の条件を加えてシートのB列にIDが入るようにコードを修正してください。
# 条件
- IDの形式は"LOG_Helmet"シートに対しては"HBT-00000",
- "LOG_BaseBall", "LOG_Bicycle", "LOG_FallArrest"に対応するのは"BBT-00000", "CHT-00000", "FAT-00000
- それぞれのシートのB列の最終行の値を見て、HBT-00004のようになっている場合は、HBT-00005のようになるようにする。
- テストのために転記元シートと転記先シートの内容を消す部分はコメントアウトしてください。

# コード
Sub DataMigration_GraphToTestDB_FromGraphbook()

    ' 転記元のブックと転記先のブックを定義
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Set sourceWorkbook = Workbooks("グラフ作成用ファイル.xlsm")

    '試験結果_データベース.xlsmが開かれているかどうかをチェック
    Dim isTargetWorkbookOpen As Boolean
    isTargetWorkbookOpen = False
    Dim wb As Workbook
    For Each wb In Application.Workbooks
        If wb.Name = "試験結果_データベース.xlsm" Then
            Set targetWorkbook = Workbooks("試験結果_データベース.xlsm")
            isTargetWorkbookOpen = True
            Exit For
        End If
    Next wb

    ' ブックが開かれていない場合は開く
    If isTargetWorkbookOpen = False Then
        Set targetWorkbook = Workbooks.Open("試験結果_データベース.xlsm")
    End If

    ' 画面更新をオフにします
    Application.ScreenUpdating = False

    ' 転記元と転記先のシート名を定義
    Dim sourceSheets As Variant
    Dim targetSheets As Variant
    sourceSheets = Array("LOG_Helmet", "LOG_BaseBall", "LOG_Bicycle", "LOG_FallArrest")
    targetSheets = Array("HeLmetTestData", "BaseBallTestData", "biCycleHelmetTestData", "FallArrestTestData")

    Dim i As Integer
    For i = LBound(sourceSheets) To UBound(sourceSheets)
        ' 転記元のシートと転記先のシートを定義
        Dim sourceSheet As Worksheet
        Dim targetSheet As Worksheet
        Set sourceSheet = sourceWorkbook.Worksheets(sourceSheets(i))
        Set targetSheet = targetWorkbook.Worksheets(targetSheets(i))

        ' 転記元のシートの最終行と最終列を取得
        Dim lastRow As Long
        Dim lastColumn As Long
        lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, "B").End(xlUp).Row
        lastColumn = sourceSheet.Cells(2, sourceSheet.Columns.Count).End(xlToLeft).Column

        ' 2行目以降に転記するデータがある場合のみコピーを行います
        If lastRow >= 2 Then
            ' 転記先のシートの最終行を取得
            Dim targetLastRow As Long
            targetLastRow = targetSheet.Cells(targetSheet.Rows.Count, "B").End(xlUp).Row + 1

            ' 転記元から転記先へデータをコピー
            sourceSheet.Range(sourceSheet.Cells(2, "B"), sourceSheet.Cells(lastRow, lastColumn)).Copy _
                Destination:=targetSheet.Cells(targetLastRow, "B")

            ' 転記した範囲を削除（データのみを削除）
            sourceSheet.Range(sourceSheet.Cells(2, "B"), sourceSheet.Cells(lastRow, lastColumn)).ClearContents
        Else
            ' 2行目以降に転記するデータがない場合はエラーメッセージを表示します
            MsgBox "Sheet: " & sourceSheets(i) & " has no data to transfer from the 2nd row onwards."
        End If
    Next i

    '画面更新をオンにします
    Application.ScreenUpdating = True

    'ブックを保存し、クローズします
    sourceWorkbook.Close SaveChanges:=True
    If isTargetWorkbookOpen = False Then
        targetWorkbook.Close SaveChanges:=True
    End If

End Sub

新しく作り直す
# 一意の試料IDを作成するコード

以下の条件に従いコードを参考に試料IDを自動生成するVBAのコードを作成してください。
# 条件
- D列、M列、N列、O列、P列の値が一致し、E列、L列の値が異なる場合一つの試料として考える。
- 00001He+"D"の形式。
- 一行ずつ処理する。
- 日本語でコメントを書く。
# コード
Sub GenerateSampleID()
    ' 試料用のIDを生成する。
    Dim ws As Worksheet
    Dim rng As Range
    Dim dic As Object
    Dim i As Long
    Dim key As String
    Dim prefix As String
    Dim idNum As Long

    Set ws = ThisWorkbook.Sheets("LOG_Helmet")
    Set dic = CreateObject("Scripting.Dictionary")

    'データ範囲を指定（列は前処理、重量、天頂すきま、色の列を指定）
    Set rng = ws.Range("M2:N" & ws.Cells(ws.Rows.Count, "M").End(xlUp).Row)

    For i = 1 To rng.Rows.Count
        '前処理、重量、天頂すきま、色を結合してkeyを作成
        key = Join(Application.Index(rng.Value, i, 0), "_")

        'keyが既にdicに存在する場合は既存のIDを使用、存在しない場合は新たなIDを生成
        If dic.Exists(key) Then
            ws.Cells(i + 1, "C").Value = dic(key)
        Else
            idNum = idNum + 1
            dic.Add key, Format(idNum, "0000") & prefix & ws.Cells(i + 1, "D").Value
            ws.Cells(i + 1, "C").Value = dic(key)
        End If
    Next i
End Sub


以下の条件に従いコードを参考に試料IDを自動生成するVBAのコードを作成してください。
# 条件
- Format(idNum, "0000")にランダムなアルファベット2文字を追加する。

# コード
Sub GenerateSampleID()
    ' 試料用のIDを生成する。
    Dim ws As Worksheet
    Dim rng As Range
    Dim dic As Object
    Dim i As Long
    Dim key As String
    Dim prefix As String
    Dim idNum As Long

    ' "LOG_Helmet"ワークシートを指定する
    Set ws = ThisWorkbook.Sheets("LOG_Helmet")

    ' Scripting.Dictionaryを作成する
    Set dic = CreateObject("Scripting.Dictionary")

    ' データ範囲を指定する
    Set rng = ws.Range("D2:P" & ws.Cells(ws.Rows.Count, "D").End(xlUp).Row)

    ' 接頭辞を設定する
    prefix = "_Hel"

    For i = 1 To rng.Rows.Count
        ' D列、M列、N列、O列、L列(前処理)の値を結合してキーを作成する
        key = ws.Cells(i + 1, "D").Value & "_" & ws.Cells(i + 1, "M").Value & "_" & ws.Cells(i + 1, "N").Value & "_" & ws.Cells(i + 1, "O").Value & "_" & ws.Cells(i + 1, "L").Value

        ' キーが既にdicに存在する場合、既存のIDを使用する。存在しない場合、新たなIDを生成する
        If dic.Exists(key) Then
            ws.Cells(i + 1, "C").Value = dic(key)
        Else
            idNum = idNum + 1
            dic.Add key, Format(idNum, "00000") & prefix & ws.Cells(i + 1, "D").Value
            ws.Cells(i + 1, "C").Value = dic(key)
        End If
    Next i
End Sub
